name: Automated Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  copilot-review:
    name: GitHub Copilot Review
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better context

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore copilot-pr-demo-test1/copilot-pr-demo-test1/copilot-pr-demo-test1.csproj

      - name: Build
        run: dotnet build copilot-pr-demo-test1/copilot-pr-demo-test1/copilot-pr-demo-test1.csproj --no-restore

      - name: Run Copilot Review
        id: copilot-review
        uses: github/copilot-review-action@v1  # This is a conceptual action
        with:
          # Copilot review configuration
          severity-threshold: 'high'  # Review critical and high severity
          file-patterns: '**/*.cs'     # Only review C# files
          exclude-patterns: '**/Tests/**,**/obj/**,**/bin/**'
          
      - name: Post Review Summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const issues = ${{ steps.copilot-review.outputs.issues }};
            const critical = issues.filter(i => i.severity === 'critical').length;
            const high = issues.filter(i => i.severity === 'high').length;
            const medium = issues.filter(i => i.severity === 'medium').length;
            
            const summary = `## ü§ñ Copilot Review Summary
            
            - üî¥ Critical: ${critical}
            - üü† High: ${high}
            - üü° Medium: ${medium}
            
            ${critical > 0 ? '‚ùå **PR blocked**: Critical issues must be resolved' : '‚úÖ **PR approved**: No critical issues found'}
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Quality Gate Check
        if: steps.copilot-review.outputs.critical-count > 0
        run: |
          echo "‚ùå Critical issues found: ${{ steps.copilot-review.outputs.critical-count }}"
          echo "PR cannot be merged until critical issues are resolved"
          exit 1  # Fail the workflow

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Security Scan
        uses: security-code-scan/security-code-scan-action@v1
        with:
          project: copilot-pr-demo-test1/copilot-pr-demo-test1.csproj
          
      - name: Upload Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: security-results.sarif

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run Code Analysis
        run: |
          dotnet tool install --global dotnet-format
          dotnet format copilot-pr-demo-test1/copilot-pr-demo-test1/copilot-pr-demo-test1.csproj --verify-no-changes --severity error
