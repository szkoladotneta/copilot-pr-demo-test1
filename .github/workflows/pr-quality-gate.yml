name: PR Quality Gate

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write
  statuses: write

jobs:
  quality-gate:
    name: Enforce Quality Standards
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check PR Title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ ! $PR_TITLE =~ ^(feat|fix|docs|refactor|test|chore): ]]; then
            echo "‚ùå PR title must start with: feat:, fix:, docs:, refactor:, test:, or chore:"
            exit 1
          fi

      - name: Check PR Size
        id: pr-size
        run: |
          FILES_CHANGED=${{ github.event.pull_request.changed_files }}
          ADDITIONS=${{ github.event.pull_request.additions }}
          DELETIONS=${{ github.event.pull_request.deletions }}
          
          echo "Files changed: $FILES_CHANGED"
          echo "Lines added: $ADDITIONS"
          echo "Lines deleted: $DELETIONS"
          
          # Warn on large PRs
          if [ $FILES_CHANGED -gt 20 ] || [ $ADDITIONS -gt 500 ]; then
            echo "‚ö†Ô∏è Large PR detected. Consider breaking into smaller PRs."
            echo "size=large" >> $GITHUB_OUTPUT
          fi

      - name: Check for Breaking Changes
        run: |
          git fetch origin ${{ github.base_ref }}
          
          # Check for removed public APIs (breaking changes)
          BREAKING_CHANGES=$(git diff origin/${{ github.base_ref }}...HEAD -- '*.cs' | grep -E '^\-.*public (class|interface|enum)' || true)
          
          if [ -n "$BREAKING_CHANGES" ]; then
            echo "‚ö†Ô∏è Potential breaking changes detected"
            echo "$BREAKING_CHANGES"
            # Post warning comment, but don't block
          fi

      - name: Require Tests
        run: |
          # Check if code changes include test changes
          CODE_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.cs$' | grep -v 'Tests' | wc -l)
          TEST_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E 'Tests.*\.cs$' | wc -l)
          
          if [ $CODE_FILES -gt 0 ] && [ $TEST_FILES -eq 0 ]; then
            echo "‚ùå Code changes detected without corresponding test changes"
            echo "Please add tests for your changes"
            exit 1
          fi

      - name: Quality Gate Summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const prSize = '${{ steps.pr-size.outputs.size }}';
            const emoji = prSize === 'large' ? '‚ö†Ô∏è' : '‚úÖ';
            
            const body = `## ${emoji} Quality Gate Check
            
            **PR Size:** ${prSize || 'normal'}
            
            ### Requirements
            - ‚úÖ PR title follows convention
            - ‚úÖ Tests included with code changes
            - ‚úÖ No blocking issues detected
            
            ${prSize === 'large' ? 'üí° **Tip:** Consider breaking large PRs into smaller, focused changes for easier review.' : ''}
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
